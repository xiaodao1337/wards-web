name: Fetch Daily Active Users Data

on:
  schedule:
    # 每天 UTC 时间 00:00（北京时间 08:00）执行
    - cron: '0 * * * *'
  # 允许手动触发工作流
  workflow_dispatch:

jobs:
  fetch-dau-data:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          persist-credentials: false

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: pip install requests

      - name: Fetch and process DAU data
        env:
          API_URL: "http://51.79.56.175:5231/getonlines"
        run: |
          # 创建Python脚本获取并处理数据
          cat > fetch_data.py << 'EOF'
          import requests
          import json
          import os
          from datetime import datetime

          api_url = os.environ.get('API_URL')
          history_file = 'dau-history.json'
          
          try:
              # 获取数据
              response = requests.get(api_url, timeout=10)
              response.raise_for_status()
              data = response.json()
              
              # 提取total字段
              total_users = data.get('total', 'N/A')
              
              # 准备要保存的数据
              current_date = datetime.now().strftime("%Y-%m-%d")
              new_entry = {
                  "date": current_date,
                  "total_users": total_users,
                  "timestamp": datetime.now().isoformat()
              }
              
              # 读取现有的历史数据文件
              if os.path.exists(history_file):
                  with open(history_file, 'r') as f:
                      history_data = json.load(f)
              else:
                  # 如果文件不存在，初始化数据结构
                  history_data = {
                      "data_source": api_url,
                      "update_frequency": "daily",
                      "historical_data": []
                  }
              
              # 检查今天是否已经有数据，如果有则更新，否则添加
              found = False
              for entry in history_data['historical_data']:
                  if entry['date'] == current_date:
                      entry.update(new_entry)
                      found = True
                      break
              
              if not found:
                  history_data['historical_data'].append(new_entry)
              
              # 更新最后更新时间
              history_data['last_updated'] = datetime.now().isoformat()
              
              # 将结果写入文件
              with open(history_file, 'w') as f:
                  json.dump(history_data, f, indent=2)
                  
              print(f"Successfully updated data for {current_date}: {total_users} users")
                  
          except Exception as e:
              print(f"Error fetching data: {e}")
              exit(1)
          EOF

          # 执行Python脚本
          python fetch_data.py

      - name: Commit and push if data changed
        run: |
          # 配置Git用户信息
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          
          # 检查文件是否有变化
          git add dau-history.json
          if git diff --staged --quiet; then
            echo "No changes to commit"
          else
            git commit -m "Update DAU history data [$(date +'%Y-%m-%d %H:%M')]"
            git push
          fi

      - name: Upload data as artifact
        uses: actions/upload-artifact@v4
        with:
          name: dau-history
          path: dau-history.json
